---
import Default from "../../layouts/default.astro";
import BlogPost from "../../components/BlogPost.astro";
import Tag from "../../components/Tag.astro";
import {render, getEntry, getCollection} from "astro:content";

const blogCollection = await getCollection("blog")

const sortedPosts = blogCollection.filter((post) => post.data.listing === "published").sort(
    (a, b) =>
        new Date(b.data.publishDate).valueOf() -
        new Date(a.data.publishDate).valueOf()
);

const featuredPost = sortedPosts[0];
const featuredPostIndex = sortedPosts.reverse().indexOf(featuredPost) + 1;

const uniqueTags = [
    ...new Set(sortedPosts.map((post) => post.data.tags).flat()),
];

const entry = await getEntry("blog", featuredPost.id);
const {Content} = await render(entry);
---

<Default title="Koehn's Notes">
    <div class="blog-page">
        <div class="main-column">
            <h3>
                ∞ {
                new Date(featuredPost.data.publishDate).toISOString().slice(0, 10)
            }<br/>* N°{featuredPostIndex} -
                {featuredPost.data.title}
            </h3>
            <div class="content">
                <Content/>
            </div>
        </div>
        <div class="container">
            <h3>* About</h3>
            <p>
                Welcome to my blog! This is a place where I will share whatever I want,
                and when I want! I hope you enjoy!
            </p>
            <h3>* Tags - ({uniqueTags.length})</h3>
            <span style="display: flex; flex-wrap: wrap;"
            >{uniqueTags.map((tag) =>
                    <Tag tag={tag}/>)}</span
            >
            <h3>* All Posts - ({sortedPosts.slice(1).length})</h3>
            {
                sortedPosts.reverse()
                    .slice(1)
                    .map((post) => (
                            <BlogPost
                                    url={`/blog/posts/${post.id}`}
                                    title={post.data.title}
                                    date={new Date(post.data.publishDate).toISOString().slice(0, 10)}
                            />
                    ))
            }
            <p>
                {
                    sortedPosts.slice(1).length < 5
                        ? "∞ That's all the posts for now!"
                        : ""
                }
            </p>
        </div>
    </div>
</Default>
