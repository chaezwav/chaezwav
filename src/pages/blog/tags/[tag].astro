---
import type { GetStaticPaths } from "astro";
import Default from "../../../layouts/default.astro";
import BlogPost from "../../../components/BlogPost.astro";
import formatAsTitle from "../../../lib/formatAsTitle";

// const filteredPosts = postGlob.filter((post) =>
//   post.frontmatter.tags.includes(tag)
// );

export async function getStaticPaths() {
  const postGlob = await Astro.glob("../posts/*.md");

  const uniqueTags = [
    ...new Set(postGlob.map((post) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = postGlob.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );

    return {
      params: { tag },
      props: {
        filteredPosts,
      },
    };
  });
}

const { tag } = Astro.params;
const { filteredPosts } = Astro.props;
---

<Default title={"#" + tag}>
  <h2>POSTS TAGGED WITH {tag}</h2>
  {
    filteredPosts.map((post) => (
      <BlogPost
        url={post.url}
        title={formatAsTitle(post.url)}
        date={new Date(post.frontmatter.pubDate).toISOString().slice(0, 10)}
      />
    ))
  }
</Default>
